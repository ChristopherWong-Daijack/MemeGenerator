[{"C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\index.js":"1","C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\App.js":"2","C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\reportWebVitals.js":"3","C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\componenets\\title.js":"4","C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\componenets\\meme.js":"5","C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\componenets\\Title.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":345,"mtime":1611631588050,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":222,"mtime":1611631459511,"results":"11","hashOfConfig":"8"},{"size":1337,"mtime":1611630947270,"results":"12","hashOfConfig":"8"},{"size":217,"mtime":1611632106379,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1rb2gow",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"16"},"C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\index.js",[],["33","34"],"C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\App.js",["35"],"import logo from './logo.svg';\nimport './App.css';\nimport Title from './componenets/Title'\nimport Meme from './componenets/meme'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Title/>\n      <Meme/>\n\n       {/* <Hello weather=\"Cold\" />*/}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\reportWebVitals.js",[],"C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\componenets\\title.js",["36"],"import react from 'react'\r\n\r\nfunction Title(){\r\n    return(\r\n    <div>\r\n        <h1>Welcome to my Dog APP</h1>\r\n        <p>This app uses a known Dog API and displays image</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Title;",["37","38"],"C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\componenets\\meme.js",["39","40"],"import react,{useState} from 'react';\r\nimport '../css/meme.css';\r\n\r\nfunction Meme(){\r\n    const url = \"https://api.imgflip.com/get_memes\";\r\n    /*const [imgData,setImgData] = useState(()=>{\r\n        grabData()\r\n    });*///Default state is the function. Which will run so that there is always an img displayed first. \r\n    //Function is in useState function so it runs once on load.\r\n    \r\n    /*const [nameData,setNameData]= useState(()=>{\r\n        grabData();\r\n    })*/\r\n\r\n    const [memeData=[],setMemeData]= useState(()=>{\r\n        grabData();\r\n    })\r\n\r\n\r\n    async function  grabData(){\r\n        var response= await fetch(url);\r\n        var data = await response.json();\r\n        var arrData = data.data.memes;\r\n        var num = Math.floor(Math.random()*arrData.length);//random number generator for displaying a random object from array in arrData\r\n        // console.log(num);\r\n        // console.log(arrData.length);\r\n        console.log(arrData[num]);\r\n        setMemeData(arrData[num]);\r\n    }\r\n   \r\n   \r\n\r\n    return(\r\n        <>\r\n        <div>\r\n            <img src={memeData.url} className=\"Image\"></img>\r\n        </div>\r\n        <p>{memeData.name}</p>\r\n        <button onClick={grabData} className=\"Button\">Click me to change meme</button>\r\n        <p>Contains Dank Memes</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Meme;",["41","42"],"C:\\Users\\chris\\Desktop\\Projects\\RandomMemeGenerator\\meme-generator\\src\\componenets\\Title.js",["43"],"import react from 'react'\r\n\r\nfunction Title(){\r\n    return(\r\n    <div>\r\n        <h1>Welcome to my Meme APP</h1>\r\n        <p>This ganerates a random Meme from MEME API</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Title;",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","severity":1,"message":"52","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":36,"column":13,"nodeType":"57","endLine":36,"endColumn":55},{"ruleId":"44","replacedBy":"58"},{"ruleId":"46","replacedBy":"59"},{"ruleId":"48","severity":1,"message":"52","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.",["60"],["61"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["60"],["61"],"no-global-assign","no-unsafe-negation"]